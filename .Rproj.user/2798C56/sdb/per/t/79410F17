{
    "contents" : "# Add Libraries\nlibrary(ROCR)\nlibrary(caret)\n# Models and ML Algorithms\n\nsummary(orders.train)\n\n#----------------------#\n#  Logistic Regression #\n#----------------------#\n# Look at Week 3 assignment of Predict 412\n\n# LR \"Full Model\"\nreturns.lr <- glm(returnShipment ~ color + timeToDeliver + accountAge \n                  + customerAge + holidayFlag + bdayFlag + numItemsInOrder\n                  + manufRiskFlag + itemRiskFlag + custRiskFlag \n                  + LetterSize + Pants + ChildSize + ShoeDress + difFromMeanPrice + state\n                  + price + salutation + customerAge + accountAge,\n              family=binomial(link=logit), data=train)\nsummary(returns.lr)\n\n# Backwards elimination selection\n# use default AIC measure\n# eliminates variables X1 and X2....  \n# Note step function uses full model defined above \nreturns.backward <- step(returns.lr)\nsummary(returns.backward)\n\n\n# TO Get ROC Curves\n# get predictions from model \n# NEED TO KNOW WHAT WE CALL TRAIN AND TEST DATA SETS\npredict.train.logistic <- predict(returns.lr, train, type=\"response\")\npredict.test.logistic <- predict(returns.lr, test, type=\"response\")\n\ntrain.logistic.pred <- prediction(predict.train.logistic, train$returnShipment)\ntrain.logistic.roc <- performance(train.logistic.pred, \"tpr\",\"fpr\")\ntrain.logistic.auc <- (performance(train.logistic.pred, \"auc\"))@y.values\n\ntest.logistic.pred <- prediction(predict.test.logistic, test$returnShipment)\ntest.logistic.roc <- performance(test.logistic.pred, \"tpr\",\"fpr\")\ntest.logistic.auc <- (performance(test.logistic.pred, \"auc\"))@y.values\n\n# plot the full model ROC curves\npdf(file = \"LR_model_ROC.pdf\", width = 11, height = 8.5)  ##/\\open pdf/\\##\nplot(train.logistic.roc, col = \"darkgreen\", main = \"ROC Curves for Logistic Regression Model\")\nplot(test.logistic.roc, col = \"red\",  add = TRUE)\nabline(c(0,1))\n# Draw a legend.\ntrain.legend <- paste(\"Train: AUC=\", round(train.logistic.auc[[1]], digits=3))\ntest.legend <- paste(\"Test : AUC=\", round(test.logistic.auc[[1]], digits=3))\nlegend(0.6, 0.5, c(train.legend,test.legend), c(3,2))\ndev.off()\n\nstr(predict.test.logistic) \n\n#------------------#\n# Confusion Matrix #  \n#------------------#\n# We need to convert preds to actual choice; introduce 'cut'\n# selected a p=.4 cutoff after review of ROC\npredictions<-cut(predict.test.logistic, c(-Inf,0.4,Inf), labels=c(\"Keep\",\"Return\"))\n# Now have a look - classes are assigned\nstr(predictions)\nsummary(predictions)\n# compare to test$pick to ensure same # of levels and obs\n# Need to impute or eliminate observations with NAs or else have above issue\nstr(test$returnShipment)\nsummary(test$returnShipment)\n\nconfusionMatrix(predictions, test$returnShipment)\n\n\n\n#------------------#\n#  Decision Trees  #\n#------------------#\n# J48 (based on Quinlan's C4.5)\nlibrary(RWeka)\n# to run j48 in RWeka\n# Get an error that j48 cannot handle numeric class - do we have to convert to something else for this to work?\nreturns_j48 <- J48(returnShipment ~ color + timeToDeliver + accountAge \n                     + customerAge + holidayFlag + bdayFlag + numItemsInOrder\n                     + manufRiskFlag + itemRiskFlag\n                     , data = train)\nreturns_j48\nsummary(returns_j48)\n\n\n#--------------------#\n#   Random Forests   #\n#--------------------#\n# Get strange error message \n\nlibrary(randomForest)\nfit <- randomForest(returnShipment ~ color + timeToDeliver + accountAge \n                    + customerAge + holidayFlag + bdayFlag + numItemsInOrder\n                    + manufRiskFlag + itemRiskFlag\n                      , data = train)\nprint(fit) # view results\nimportance(fit) # importance of each predictor \n# we note variable x1 is most important, followed by x2, x3, and x4\n\nRFprediction <- predict(fit, test)\nconfusionMatrix(RFprediction, test$returnShipment)\n\n#-----------------------------#\n#   Support Vector Machines   #\n#-----------------------------#\nlibrary(e1071)  \t#for Support Vector Machines\n\n\n#------PLACE HOLDER FROM 412 CODE------------#\n\n# Whoa there!  This one killed my PC! (JB)  \n# Not sure if that's b/c of the NA's or if it's an expensive computational method\n\n\nsvmmodel <- svm(returnShipment ~ color + timeToDeliver + accountAge \n                + customerAge + holidayFlag + bdayFlag + numItemsInOrder\n                + manufRiskFlag + itemRiskFlag\n                , data = train)\nprint(svmmodel)\nsummary(svmmodel)\n\nsvmprediction <- predict(svmmodel, test)\nconfusionMatrix(svmprediction, test$returnShipment)\nca <- table(svmprediction, test$returnShipment)\nclassAgreement(ca)\n\n# optimize C and Gamma\ntobj <- tune.svm(returnShipment ~ color + timeToDeliver + accountAge \n                 + customerAge + holidayFlag + bdayFlag + numItemsInOrder\n                 + manufRiskFlag + itemRiskFlag\n                 , data = train, \n                 gamma = 10^(-6:-3), cost = 10^(1:2))\nsummary(tobj)\n\n#plot error landscape\npdf(file = \"SVM_error_landscape.pdf\", width = 11, height = 8.5)\t##/\\open pdf/\\##\nplot(tobj, transform.x = log10, xlab = expression(log[10](gamma)),\n     ylab = \"C\")\ndev.off()\t\t\t\t\t\t\t\t\t\t##\\/close pdf\\/##\n\n\n# use optimized  C and gamma\nbestGamma <- tobj$best.parameters[[1]]\nbestC <- tobj$best.parameters[[2]]\nnewsvmmodel <- svm(returnShipment ~ ., data = train,\n                   cost = bestC, gamma = bestGamma, cross = 10)\nsummary(newsvmmodel)\n\n# show confusion matrix\nnewsvmprediction <- predict(newsvmmodel, test)\nconfusionMatrix(newsvmprediction, test$returnShipment)\n\n# show class agreement function\nca <- table(newsvmprediction, test$returnShipment)\nclassAgreement(ca)\n\n\n# Ensemble Methods\n# Perhaps can average prediction from some of above",
    "created" : 1398821523659.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3894958203",
    "id" : "79410F17",
    "lastKnownWriteTime" : 1399005414,
    "path" : "~/GitHub/CAPSTONE/Modeling Code.R",
    "project_path" : "Modeling Code.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}